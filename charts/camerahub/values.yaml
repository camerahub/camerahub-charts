# Default values for camerahub.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  storageClass:
  postgresql:
    username: postgres
    password: postgres
    database: camerahub
  redis: {}

# Settings for Redis subchart
# This is a condensed form - see upstream docs for full details
# https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
redis:
  usePassword: false
  password: ""
  cluster:
    enabled: true
    # Additional slaves, excluding the master
    slaveCount: 1
  master:
    persistence:
      enabled: true
      storageClass: ""
      accessModes: [ReadWriteOnce]
      size: 1Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
  slave:
    persistence:
      enabled: true
      storageClass: ""
      accessModes: [ReadWriteOnce]
      size: 1Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
  metrics:
    enabled: false
    resources: {}
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9121"
    serviceMonitor:
      enabled: false
      selector:
        prometheus: kube-prometheus
    prometheusRule:
      enabled: false
      additionalLabels: {}
      namespace: ""
      rules: []
  volumePermissions:
    enabled: false

# Settings for Postgresql-ha subchart
postgresql-ha:
  nameOverride: postgresql-ha
  persistence:
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 8Gi
  postgresql:
    # Total replicas
    replicaCount: 2
    resources:
      limits: {}
      #   cpu: 250m
      #   memory: 256Mi
      requests: {}
      #   cpu: 250m
      #   memory: 256Mi
    username: postgres
    # password:
    # database:
    # postgresPassword:
    syncReplication: false
    repmgrUsername: repmgr
    repmgrPassword: repmgr
    repmgrDatabase: repmgr
    repmgrConnectTimeout: 5
    repmgrReconnectAttempts: 3
    repmgrReconnectInterval: 5
    maxConnections:
    postgresConnectionLimit:
    dbUserConnectionLimit:
    tcpKeepalivesInterval:
    tcpKeepalivesIdle:
    tcpKeepalivesCount:
    statementTimeout:
  pgpool:
    replicaCount: 1
    resources:
      limits: {}
      #   cpu: 250m
      #   memory: 256Mi
      requests: {}
      #   cpu: 250m
      #   memory: 256Mi
  metrics:
    enabled: false
    resources:
      limits: {}
      #   cpu: 250m
      #   memory: 256Mi
      requests: {}
      #   cpu: 250m
      #   memory: 256Mi
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"
    serviceMonitor:
      enabled: false
      selector:
        prometheus: kube-prometheus
  volumePermissions:
    enabled: false

camerahub:
  secretKey: OverrideMe!
  adminEmail: admin@example.com
  adminPassword: admin
  production: true
  redis: false
  domain:
  email:
    backend: "django.core.mail.backends.filebased.EmailBackend"
    sendgridKey: ""
    host: ""
    user: ""
    password: ""
    useTLS: ""
    UseSSL: ""
    port: ""

# Replicas of CameraHub app server
replicaCount: 2

image:
  repository: camerahub/camerahub
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme:
    # cert-manager.io/issuer:
    # cert-manager.io/cluster-issuer:
    # acme.cert-manager.io/http01-ingress-class: public
  class: public
  tls: false

migrations:
  ## Should the job be rescheduled on the same node if it fails, or just stopped
  restartPolicy: Never
  backoffLimit: 1

backup:
  media:
    schedule: "0 3 * * *"
    suspend: true
  database:
    schedule: "0 3 * * *"
    suspend: true

# Storage for CameraHub media and backups
storage:
  enabled: true
  storageClass: ""
  size: 8Gi
  accessModes: [ReadWriteMany]

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
